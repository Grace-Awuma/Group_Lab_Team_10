/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.FacultyRole;

import Business.Business;
import Business.Profiles.FacultyProfile;
import Business.Course.CourseOffer;
import Business.Course.CourseEnrollment;
import Business.Profiles.StudentProfile;
import javax.swing.JPanel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;

/**
 *
 * @author Yaksha
 */
public class StudentManagementJPanel extends javax.swing.JPanel {

    private Business business;
    private FacultyProfile faculty;
    private JPanel cardPanel;
    /**
     * Creates new form StudentManagementJPanel
     */
    public StudentManagementJPanel() {
        initComponents();
    }

    public void initialize(Business business, FacultyProfile faculty, JPanel cardPanel) {
        this.business = business;
        this.faculty = faculty;
        this.cardPanel = cardPanel;
        loadCourses();
    }
    
    private void loadCourses() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("-- Select Course --");
        
        for (CourseOffer offer : faculty.getAssignedCourses()) {
            model.addElement(offer.getCourse().getCourseId() + " - " + offer.getCourse().getCourseName());
        }
        
        jComboCourseSelection.setModel(model);
        
        // Setup filter
        DefaultComboBoxModel<String> filterModel = new DefaultComboBoxModel<>();
        filterModel.addElement("All Students");
        filterModel.addElement("Passing (>60%)");
        filterModel.addElement("Failing (<60%)");
        jComboFilterResults.setModel(filterModel);
    }
    
    private void populateTable() {
        int selectedIndex = jComboCourseSelection.getSelectedIndex();
        if (selectedIndex <= 0) return;
        
        CourseOffer selectedOffer = faculty.getAssignedCourses().get(selectedIndex - 1);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        String filter = (String) jComboFilterResults.getSelectedItem();
        
        for (CourseEnrollment enrollment : selectedOffer.getEnrollments()) {
            StudentProfile student = enrollment.getStudent();
            double percentage = enrollment.calculateTotalPercentage();
            String letterGrade = enrollment.calculateLetterGrade();
            double gpa = student.getOverallGPA();
            
            // Apply filter
            if (filter.equals("Passing (>60%)") && percentage < 60) continue;
            if (filter.equals("Failing (<60%)") && percentage >= 60) continue;
            
            model.addRow(new Object[]{
                student.getPerson().getPersonId(),
                student.getPerson().getFullName(),
                selectedOffer.getCourse().getCourseId(),
                String.format("%.2f%%", percentage),
                letterGrade,
                "N/A", // Rank would need calculation
                String.format("%.2f", gpa)
            });
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCalculateGrade = new javax.swing.JButton();
        btnViewProgress = new javax.swing.JButton();
        lblStudentManagement = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblSelectCourse = new javax.swing.JLabel();
        lblFilterResults = new javax.swing.JLabel();
        jComboCourseSelection = new javax.swing.JComboBox<>();
        jComboFilterResults = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAddStudent = new javax.swing.JButton();
        btnDeleteStudent = new javax.swing.JButton();
        btnViewStudents = new javax.swing.JButton();
        btnViewTranscript = new javax.swing.JButton();
        btnGradeAssignment = new javax.swing.JButton();

        btnCalculateGrade.setText("Calculate Grade");
        btnCalculateGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateGradeActionPerformed(evt);
            }
        });

        btnViewProgress.setText("View Progress Report");
        btnViewProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProgressActionPerformed(evt);
            }
        });

        lblStudentManagement.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblStudentManagement.setText("Student Management ");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSelectCourse.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSelectCourse.setText("Select Course");

        lblFilterResults.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFilterResults.setText("Filter Results");

        jComboCourseSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboCourseSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCourseSelectionActionPerformed(evt);
            }
        });

        jComboFilterResults.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboFilterResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboFilterResultsActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Student Name", "Course", "Total Grade %", "Letter Grade", "Rank", "GPA"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAddStudent.setText("Add Student");
        btnAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStudentActionPerformed(evt);
            }
        });

        btnDeleteStudent.setText("Delete Student");

        btnViewStudents.setText("View Students");
        btnViewStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewStudentsActionPerformed(evt);
            }
        });

        btnViewTranscript.setText("View Transcript");
        btnViewTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTranscriptActionPerformed(evt);
            }
        });

        btnGradeAssignment.setText("Grade Assignment");
        btnGradeAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradeAssignmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnViewStudents)
                            .addComponent(btnAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDeleteStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewTranscript, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnGradeAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCalculateGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewProgress))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(191, 191, 191)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(228, 228, 228))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(287, 287, 287)
                            .addComponent(lblStudentManagement))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSelectCourse)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboCourseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(180, 180, 180)
                                    .addComponent(lblFilterResults)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboFilterResults, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStudentManagement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCourse)
                    .addComponent(jComboCourseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFilterResults)
                    .addComponent(jComboFilterResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewStudents)
                    .addComponent(btnViewTranscript)
                    .addComponent(btnGradeAssignment)
                    .addComponent(btnCalculateGrade)
                    .addComponent(btnViewProgress))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteStudent)
                    .addComponent(btnAddStudent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewStudentsActionPerformed

        // TODO add your handling code here:
        String selectedCourse = (String) jComboCourseSelection.getSelectedItem();
        
        if (selectedCourse == null || selectedCourse.equals("-- Select Course --")) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a course first!");
            return;
        }
        
        populateTable();
        javax.swing.JOptionPane.showMessageDialog(this, "Students loaded for " + selectedCourse);
    }//GEN-LAST:event_btnViewStudentsActionPerformed

    private void btnViewTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTranscriptActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a student!");
            return;
        }
        
        String studentId = (String) jTable1.getValueAt(row, 0);
        StudentProfile student = business.getStudentDirectory().findStudent(studentId);
        
        if (student != null) {
            StringBuilder transcript = new StringBuilder();
            transcript.append("Student: ").append(student.getPerson().getFullName()).append("\n");
            transcript.append("ID: ").append(studentId).append("\n");
            transcript.append("GPA: ").append(String.format("%.2f", student.getOverallGPA())).append("\n\n");
            transcript.append("Courses:\n");
            transcript.append("----------------------------------------\n");
            
            for (CourseEnrollment enrollment : student.getEnrollments()) {
                transcript.append(enrollment.getCourseOffer().getCourse().getCourseId())
                    .append(" - ").append(enrollment.getCourseOffer().getCourse().getCourseName())
                    .append(" | Grade: ").append(enrollment.getGrade() != null ? enrollment.getGrade() : "In Progress")
                    .append("\n");
            }
            
            javax.swing.JOptionPane.showMessageDialog(this, transcript.toString(), 
                "Student Transcript", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnViewTranscriptActionPerformed

    private void jComboCourseSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCourseSelectionActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jComboCourseSelectionActionPerformed

    private void jComboFilterResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboFilterResultsActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jComboFilterResultsActionPerformed

    private void btnGradeAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradeAssignmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGradeAssignmentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ((CardLayout)cardPanel.getLayout()).show(cardPanel, "workarea");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCalculateGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCalculateGradeActionPerformed

    private void btnViewProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProgressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewProgressActionPerformed

    private void btnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddStudentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStudent;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCalculateGrade;
    private javax.swing.JButton btnDeleteStudent;
    private javax.swing.JButton btnGradeAssignment;
    private javax.swing.JButton btnViewProgress;
    private javax.swing.JButton btnViewStudents;
    private javax.swing.JButton btnViewTranscript;
    private javax.swing.JComboBox<String> jComboCourseSelection;
    private javax.swing.JComboBox<String> jComboFilterResults;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblFilterResults;
    private javax.swing.JLabel lblSelectCourse;
    private javax.swing.JLabel lblStudentManagement;
    // End of variables declaration//GEN-END:variables
}
