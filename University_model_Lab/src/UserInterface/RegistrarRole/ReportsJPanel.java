/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.RegistrarRole;

import Business.Business;
import Business.Course.CourseOffer;
import Business.Course.CourseEnrollment;
import Business.Profiles.StudentProfile;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author Yaksha
 */
public class ReportsJPanel extends javax.swing.JPanel {

    private Business business;
    private JPanel cardPanel;
    
    /**
     * Creates new form ReportsJPanel
     */
    public ReportsJPanel() {
        initComponents();
    }
    
    public void initialize(Business business, JPanel cardPanel) {
        this.business = business;
        this.cardPanel = cardPanel;
        loadReports();
    }

    private void loadReports() {
        loadEnrollmentByCourse();
        loadGPADistribution();
        loadRevenueByDepartment();
    }
    
    private void loadEnrollmentByCourse() {
        DefaultTableModel model = (DefaultTableModel) tblEnrollByCourse.getModel();
        model.setRowCount(0);
        
        for (CourseOffer offer : business.getCourseOfferDirectory().getCourseOfferList()) {
            model.addRow(new Object[]{
                offer.getCourse().getCourseId(),
                offer.getCourse().getCourseName(),
                offer.getEnrolledCount()
            });
        }
    }
    
    private void loadGPADistribution() {
        DefaultTableModel model = (DefaultTableModel) tblGpaDist.getModel();
        model.setRowCount(0);
        
        Map<String, int[]> programStats = new HashMap<>();
        
        for (StudentProfile student : business.getStudentDirectory().getStudentList()) {
            String program = student.getProgram();
            double gpa = student.getOverallGPA();
            
            if (!programStats.containsKey(program)) {
                programStats.put(program, new int[4]);
            }
            
            int[] stats = programStats.get(program);
            if (gpa >= 0 && gpa < 2.0) stats[0]++;
            else if (gpa >= 2.0 && gpa < 3.0) stats[1]++;
            else if (gpa >= 3.0 && gpa < 3.5) stats[2]++;
            else if (gpa >= 3.5) stats[3]++;
        }
        
        for (Map.Entry<String, int[]> entry : programStats.entrySet()) {
            int[] stats = entry.getValue();
            model.addRow(new Object[]{
                entry.getKey(),
                stats[0],
                stats[1],
                stats[2],
                stats[3]
            });
        }
    }
    
    private void loadRevenueByDepartment() {
        DefaultTableModel model = (DefaultTableModel) tblRevenueByDept.getModel();
        model.setRowCount(0);
        
        Map<String, Double> deptRevenue = new HashMap<>();
        
        for (CourseOffer offer : business.getCourseOfferDirectory().getCourseOfferList()) {
            String dept = offer.getCourse().getDepartment();
            double revenue = offer.getTotalTuitionCollected();
            
            deptRevenue.put(dept, deptRevenue.getOrDefault(dept, 0.0) + revenue);
        }
        
        for (Map.Entry<String, Double> entry : deptRevenue.entrySet()) {
            model.addRow(new Object[]{
                entry.getKey(),
                String.format("$%.2f", entry.getValue())
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblGpaDist = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRevenueByDept = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnrollByCourse = new javax.swing.JTable();

        tblGpaDist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Program", "0-2", "2-3", "3.3.5", "3.5-4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblGpaDist);

        tblRevenueByDept.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Department", "Revenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRevenueByDept);

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("Reports & Analytics (Term: â€¦)");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblEnrollByCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course #", "Course", "Enrolled"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEnrollByCourse);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addGap(103, 103, 103)
                        .addComponent(btnBack)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ((CardLayout)cardPanel.getLayout()).show(cardPanel, "workarea");

    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblEnrollByCourse;
    private javax.swing.JTable tblGpaDist;
    private javax.swing.JTable tblRevenueByDept;
    // End of variables declaration//GEN-END:variables
}
